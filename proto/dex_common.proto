syntax = "proto3";

package dex.common.v1;

// Main output message
message DexOutput {
  repeated PoolCreated pools_created = 1;
  repeated PoolTicker tickers = 2;  // Combines swap activity and rolling volumes
}

// Pool/Pair creation event
message PoolCreated {
  string pool_address = 1;
  string token0 = 2;
  string token1 = 3;
  uint32 fee = 4;          // For V3 DEXes, V2 can use 0 or fixed value
  uint64 block_number = 5;
  string transaction_hash = 6;
  uint32 token0_decimals = 7;
  uint32 token1_decimals = 8;
}

// Pool ticker data - aggregated activity per pool per block
message PoolTicker {
  // Pool identification
  string pool_address = 1;

  // Block-level volume aggregates (sum of all swaps in this block)
  string block_volume_token0 = 2;  // Total token0 volume in this block
  string block_volume_token1 = 3;  // Total token1 volume in this block
  uint32 swap_count = 4;           // Number of swaps for this pool in this block

  // Price data (token0 per token1)
  string close_price = 5;    // Final price in this block

  // 24-hour rolling volumes
  string volume_24h_token0 = 6;
  string volume_24h_token1 = 7;

  // Metadata
  uint64 block_number = 8;
  uint64 timestamp = 9;
}
